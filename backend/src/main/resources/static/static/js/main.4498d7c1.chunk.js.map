{"version":3,"sources":["constants/userConstants.js","components/screens/HomeScreen.js","actions/ProductActions.js","constants/productConstants.js","components/screens/ProductScreen.js","actions/cartAction.js","constants/cartConstants.js","components/screens/OrderSuccessModal.js","components/screens/CartScreen.js","components/screens/SigninScreen.js","actions/userActions.js","components/screens/RegisterScreen.js","components/CheckoutSteps.js","components/screens/ShippingScreen.js","components/screens/PaymentScreen.js","components/screens/PlaceOrderScreen.js","actions/orderActions.js","constants/orderConstants.js","components/screens/ProfileScreen.js","components/screens/OrderScreen.js","App.js","reducers/userReducers.js","reducers/index.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","HomeScreen","props","productList","useSelector","state","products","loading","error","dispatch","useDispatch","useEffect","a","type","axios","get","data","payload","message","renderProducts","map","product","key","id","className","to","src","image","alt","name","brand","price","rating","numReviews","ProductScreen","useState","qty","setQty","productDetails","productId","match","params","renderQtyList","Array","countInStock","keys","x","class","style","color","description","value","onChange","e","target","onClick","history","push","addToCart","getState","Axios","cartItems","cart","Cookie","set","JSON","stringify","OrderSuccessModal","order","onClose","ReactDOM","createPortal","backgroundColor","fontSize","marginBottom","orderId","date","orderItems","item","payment","paymentMethod","shipping","address","city","postalCode","country","totalPrice","document","querySelector","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","length","reduce","c","disabled","SigninScreen","email","setEmail","password","setPassword","userSignin","userInfo","redirect","onSubmit","preventDefault","post","headers","username","isadmin","token","signin","htmlFor","RegisterScreen","setName","setRePassword","userRegister","register","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","setAddress","setCity","setPostalCode","setCountry","PaymentScreen","setPaymentMethod","PlaceOrderScreen","orderCreate","success","itemsPrice","taxPrice","toFixed","shippingPrice","Authorization","createOrder","ProfileScreen","myOrderList","loadingOrders","orders","errorOrders","total","OrderScreen","orderDetails","isDelivered","deliveredAt","isPaid","paidAt","App","classList","add","charAt","toUpperCase","slice","remove","path","exact","component","require","combineReducers","action","currentProductObj","find","p","filter","initialState","getJSON","store","createStore","reducers","applyMiddleware","thunk","render","getElementById"],"mappings":"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","file":"static/js/main.4498d7c1.chunk.js","sourcesContent":["export const USER_SIGNIN_REQUEST = \"USER_SIGNIN_REQUEST\";\r\nexport const USER_SIGNIN_SUCCESS = \"USER_SIGNIN_SUCCESS\";\r\nexport const USER_SIGNIN_FAIL = \"USER_SIGNIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { listProducts } from \"../../actions/ProductActions\";\r\n\r\nconst HomeScreen = (props) => {\r\n  // const [products, setProducts] = useState([]);\r\n\r\n  /*\r\n  A hook to access the redux store's state. (redux new feature over connect() function )\r\n  This hook takes a selector function as an argument. The selector is called with the store state.\r\n  this like mapStateToProps fn which let you extact a state from store.\r\n  */\r\n  const productList = useSelector((state) => state.productList);\r\n\r\n  // destructing the porductList object.\r\n  const { products, loading, error } = productList;\r\n\r\n  // A hook to access the redux dispatch function.\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //dispatching action creator (listProducts) to get list of products.\r\n    dispatch(listProducts());\r\n  }, []);\r\n\r\n  if (!products) {\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  const renderProducts = products.map((product) => {\r\n    return (\r\n      <li key={product.id}>\r\n        <div className=\"product\">\r\n          <Link to={`/product/${product.id}`}>\r\n            <img className=\"product-image\" src={product.image} alt=\"product\" />\r\n          </Link>\r\n          <div className=\"product-name\">\r\n            <Link to={`/product/${product.id}`}>{product.name}</Link>\r\n          </div>\r\n          <div className=\"product-brand\">{product.brand}</div>\r\n          <div className=\"product-price\">Rs.{product.price}</div>\r\n          <div className=\"product-rating\">\r\n            {product.rating} Stars ({product.numReviews} Reviews)\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"products\">{renderProducts}</ul>;\r\n};\r\n\r\nexport default HomeScreen;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST }); //dispatching an action that we are about to make api call. so show loading screen.\r\n    const { data } = await axios.get(\"/api/products\");\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId }); //dispatching an action that we are about to make api call. so show loading screen.\r\n    const { data } = await axios.get(\"/api/product/\" + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { detailsProduct } from \"../../actions/ProductActions\";\r\n\r\nconst ProductScreen = (props) => {\r\n  const [qty, setQty] = useState(1); // to allow max. qty to show in \"add to cart section\" based on product qty in stock.\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = productDetails;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(detailsProduct(props.match.params.id));\r\n  }, []);\r\n\r\n  const handleAddToCartButtonClick = () => {\r\n    //history.push() is method redirect to another url\r\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  if (!product) {\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  //Array(N)==> give empty array of length N.\r\n  // Array(N).keys() returns an \"Array Iterator\" object with the keys of an array.\r\n  // Array.from(Array(10).keys()) gives array from [0...N-1]\r\n  // short hand: [...Array(10).keys()]\r\n  const renderQtyList = [...Array(product.countInStock).keys()].map((x) => (\r\n    <option key={x + 1}>{x + 1}</option>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"back-to-result\">\r\n        <Link to=\"/\">Back to result</Link>\r\n      </div>\r\n      <div className=\"details\">\r\n        <div className=\"details-image\">\r\n          <img src={product.image} alt=\"product\" />\r\n        </div>\r\n        <div className=\"details-info\">\r\n          <ul>\r\n            <li>\r\n              <h4 class=\"remove-semantic-css\">{product.name}</h4>\r\n            </li>\r\n            <li style={{ color: \"#023e8a\" }}>\r\n              {product.rating} Stars ({product.numReviews} Reviews)\r\n            </li>\r\n            <li>\r\n              <strong>Description:</strong>\r\n              <div>{product.description}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"details-action\">\r\n          <ul>\r\n            <li>Price:Rs. {product.price}</li>\r\n            <li>\r\n              Status: {product.countInStock > 0 ? \"In Stock\" : \"Unavailable\"}\r\n            </li>\r\n            <li>\r\n              Qty:{\" \"}\r\n              <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                {renderQtyList}\r\n              </select>\r\n            </li>\r\n            <li>\r\n              {product.countInStock > 0 ? (\r\n                <button\r\n                  className=\"button primary\"\r\n                  onClick={handleAddToCartButtonClick}\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              ) : (\r\n                <div>Out of Stock</div>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import Axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING,\r\n  CART_SAVE_PAYMENT,\r\n  CART_CLEAR_ITEM,\r\n} from \"../constants/cartConstants\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await Axios.get(\"/api/product/\" + productId);\r\n    // for payload we are basically destructuring {data} and adding qty selected by user to it.\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        productId: data.id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    });\r\n\r\n    // after dispatching the action saving the resultant state to cookie. using js-cookie library.\r\n    const { cartItems } = getState().cart;\r\n    // key value pair for cookie. then later retreiving back again in store's initialState object.\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n  } catch (error) {}\r\n};\r\n\r\nexport const removeFromCart = (productId) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n\r\n  const { cartItems } = getState().cart;\r\n  // key value pair for cookie\r\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n\r\n//saving shipping address entered at the time of checkout.\r\nexport const saveShipping = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data });\r\n};\r\n\r\n//saving payment option selected at the time of checkout.\r\nexport const savePayment = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data });\r\n};\r\n\r\nexport const clearCart = () => (dispatch) => {\r\n  dispatch({ type: CART_CLEAR_ITEM });\r\n};\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING = \"CART_SAVE_SHIPPING\";\r\nexport const CART_SAVE_PAYMENT = \"CART_SAVE_PAYMENT\";\r\n\r\nexport const CART_CLEAR_ITEM = \"CART_CLEAR_ITEM\";\r\n","import React from \"react\";\r\nimport ReactDOM, { render } from \"react-dom\";\r\n\r\nconst OrderSuccessModal = ({ order, onClose }) => {\r\n  const renderItems = () => {\r\n    return order.orderItems.map((item) => (\r\n      <p key={item.productId}>\r\n        {item.qty} X {item.name}\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ui dimmer modals page visible active\">\r\n      <div className=\"ui standard modal visible active\">\r\n        <div className=\"header\">Order Sucessfull</div>\r\n        <div className=\"scrolling content\">\r\n          <div\r\n            className=\"ui header\"\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              fontSize: \"16px\",\r\n              marginBottom: \"35px\",\r\n            }}\r\n          >\r\n            Thank You, your order has been successful. Please review order\r\n            detail below or in profile section.\r\n          </div>\r\n          <div className=\"order-details\" style={{ fontSize: \"14px\" }}>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"object-key\">ORDER ID</td>\r\n                  <td className=\"object-value\">{order.orderId}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"object-key\">ORDER DATE</td>\r\n                  <td className=\"object-value\">{order.date}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"object-key\">ITEMS</td>\r\n                  <td className=\"object-value\">{renderItems()}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"object-key\">PAYMENT TYPE</td>\r\n                  <td className=\"object-value\">\r\n                    {order.payment.paymentMethod}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"object-key\">ADDRESS</td>\r\n                  <td className=\"object-value\">\r\n                    <p>{order.shipping.address}</p>\r\n                    <p>{order.shipping.city}</p>\r\n                    <p>{order.shipping.postalCode}</p>\r\n                    <p>{order.shipping.country}</p>\r\n                  </td>\r\n                </tr>{\" \"}\r\n                <tr>\r\n                  <td className=\"object-key\">TOTAL</td>\r\n                  <td className=\"object-value\">{order.totalPrice}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"button secondary\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n};\r\n\r\nexport default OrderSuccessModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../../actions/cartAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrderSuccessModal from \"./OrderSuccessModal\";\r\n\r\nconst CartScreen = (props) => {\r\n  //goal what product and in what quantity\r\n  const productId = props.match.params.id;\r\n  // search is a key on location object that store query string of url:\r\n  // '?qty=3': split the string at '=', take right value: index=1 and convert in number. otherwise take default qty as 1.\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split(\"=\")[1])\r\n    : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => {\r\n    return state.cart;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, []);\r\n\r\n  const removeFromCartHandler = (productId) => {\r\n    dispatch(removeFromCart(productId));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push(\"/signin?redirect=shipping\");\r\n  };\r\n\r\n  const renderCartItems = () => {\r\n    return cartItems.map((item) => {\r\n      return (\r\n        <li key={item.productId}>\r\n          {/* divs: cart-image, cart-name, cart-price */}\r\n          <div className=\"cart-image\">\r\n            <img src={item.image} alt=\"product\" />\r\n          </div>\r\n          <div className=\"cart-name\">\r\n            {/* divs: item name, Qty + Delete button */}\r\n            <div>\r\n              <Link to={`/product/${item.productId}`}>{item.name}</Link>\r\n            </div>\r\n            <div>\r\n              Qty:\r\n              <select\r\n                value={item.qty}\r\n                onChange={(e) =>\r\n                  dispatch(addToCart(item.productId, e.target.value))\r\n                }\r\n              >\r\n                {[...Array(item.countInStock).keys()].map((x) => (\r\n                  <option key={x + 1} value={x + 1}>\r\n                    {x + 1}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button\r\n                type=\"button\"\r\n                className=\"button\"\r\n                onClick={() => removeFromCartHandler(item.productId)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-price\">Rs.{item.price}</div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"back-to-result\">\r\n        <Link to=\"/\">Back to result</Link>\r\n      </div>\r\n      <div className=\"cart\">\r\n        {/* cart-list, cart-action */}\r\n        <div className=\"cart-list\">\r\n          <ul className=\"cart-list-container\">\r\n            {/* list item: 1st row: Shopping cart + price row. \r\n    if no cart item then no more <li> tag. else new <li> for each list item. */}\r\n            <li>\r\n              <h3 className=\"remove-semantic-css\">Shopping Cart</h3>\r\n              <div>Price</div>\r\n            </li>\r\n            {cartItems.length === 0 ? (\r\n              <div>Cart is empty</div>\r\n            ) : (\r\n              renderCartItems()\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"cart-action\">\r\n          <h3 className=\"remove-semantic-css\">\r\n            {/* Subtotal ( 5 items) : Rs. 3245. Note: c.qty multiply by 1 is litte hack to convert c.qty into from String to Number */}\r\n            Subtotal ( {cartItems.reduce((a, c) => a + c.qty * 1, 0)} items) :\r\n            Rs. {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n          </h3>\r\n          <button\r\n            onClick={checkoutHandler}\r\n            className=\"button primary full-width\"\r\n            disabled={cartItems.length === 0}\r\n          >\r\n            Proceed to Checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signin } from \"../../actions/userActions\";\r\n\r\nconst SigninScreen = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n  useEffect(() => {\r\n    // if userInfo is present and user tries to visit sign-in page, redirect user to homeScreen\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [userInfo]); // also run useEffect, when userInfo is changed.\r\n\r\n  // dispatch signin action on form submit.\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(email, password));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        {/* form elements as list */}\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2 className=\"remove-semantic-css\">Sign-In</h2>\r\n          </li>\r\n          <li>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Signin\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"button\">New to amazon?</label>\r\n\r\n            <Link\r\n              to={\r\n                redirect === \"/\" ? \"register\" : \"register?redirect=\" + redirect\r\n              }\r\n              className=\"button\"\r\n            >\r\n              Create New Account\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninScreen;\r\n","import Axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport {\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { headers } = await Axios.post(\"/api/users/login\", {\r\n      email,\r\n      password,\r\n    });\r\n    const { username, name, isadmin, token } = headers;\r\n\r\n    const data = { username, name, isadmin, token };\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    //cookie: if user close the web app, the data of the user will be savved in the cookie.\r\n    Cookie.set(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/register\", {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../../actions/userActions\";\r\n\r\nconst RegisterScreen = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rePassword, setRePassword] = useState(\"\");\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    // if userInfo is present and user tries to visit sign-in page, redirect user to homeScreen\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [userInfo]); // also run useEffect, when userInfo is changed.\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        {/* form elements as list */}\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2 className=\"remove-semantic-css\">Create Account</h2>\r\n          </li>\r\n          <li>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"rePassword\"\r\n              name=\"rePassword\"\r\n              onChange={(e) => setRePassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Register\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"button\">Already have an account</label>\r\n            <Link\r\n              to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect}\r\n              className=\"button\"\r\n            >\r\n              Sign-In Here!\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nfunction CheckoutSteps(props) {\r\n  return <div className=\"checkout-steps\">\r\n    <div className={props.step1 ? 'active' : ''} >Signin</div>\r\n    <div className={props.step2 ? 'active' : ''} >Shipping</div>\r\n    <div className={props.step3 ? 'active' : ''} >Payment</div>\r\n    <div className={props.step4 ? 'active' : ''} >Place Order</div>\r\n  </div>\r\n}\r\n\r\nexport default CheckoutSteps;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveShipping } from \"../../actions/cartAction\";\r\nimport CheckoutSteps from \"../CheckoutSteps\";\r\n\r\nfunction ShippingScreen(props) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const { userInfo } = useSelector((state) => state.userSignin);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!userInfo) {\r\n    props.history.push(\"/signin\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShipping({ address, city, postalCode, country }));\r\n    props.history.push(\"payment\");\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2 className=\"remove-semantic-css\">Shipping</h2>\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              ></input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"city\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"postalCode\">Postal Code</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"postalCode\"\r\n                id=\"postalCode\"\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n              ></input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"country\">Country</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"country\"\r\n                id=\"country\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></input>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ShippingScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { savePayment } from \"../../actions/cartAction\";\r\nimport CheckoutSteps from \"../CheckoutSteps\";\r\n\r\nfunction PaymentScreen(props) {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePayment({ paymentMethod }));\r\n    props.history.push(\"placeorder\");\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2 className=\"remove-semantic-css\">Payment</h2>\r\n            </li>\r\n\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paymentMethod\"\r\n                  value=\"paypal\"\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></input>\r\n                <label htmlFor=\"paymentMethod\">Paypal</label>\r\n              </div>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../CheckoutSteps\";\r\nimport { createOrder } from \"../../actions/orderActions\";\r\nimport { clearCart } from \"../../actions/cartAction\";\r\nimport OrderSuccessModal from \"./OrderSuccessModal\";\r\n\r\n// detailed info of cart products, address and payment before placing the order.\r\nfunction PlaceOrderScreen(props) {\r\n  const cart = useSelector((state) => state.cart); //reducer that stores address and paymentMethod for the order\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { userInfo } = useSelector((state) => state.userSignin);\r\n  const { loading, success, error, order } = orderCreate;\r\n  const { cartItems, shipping, payment } = cart;\r\n\r\n  // if any of below data is not filled then redirecting  to that particular screen.\r\n  if (!userInfo) {\r\n    props.history.push(\"/signin\");\r\n  } else if (!shipping.address) {\r\n    props.history.push(\"/shipping\");\r\n  } else if (!payment.paymentMethod) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n\r\n  // generating order related statistics.\r\n  const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n  const taxPrice = (itemsPrice - itemsPrice / 1.15).toFixed(2);\r\n  const shippingPrice = itemsPrice > 499 ? 0 : 40;\r\n  const totalPrice = itemsPrice + shippingPrice;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const placeOrderHandler = () => {\r\n    // create an order\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartItems,\r\n        username: userInfo.username,\r\n        shipping,\r\n        payment,\r\n        itemsPrice,\r\n        shippingPrice,\r\n        taxPrice,\r\n        totalPrice,\r\n      })\r\n    );\r\n  };\r\n  // useEffect(() => {\r\n  //   if (success) {\r\n  //     //create cart.\r\n  //     dispatch(clearCart());\r\n  //     // show success model screen with back to myOrderList.\r\n  //     props.history.push(\"/order/\" + order.orderId);\r\n  //   }\r\n  // }, [success]);\r\n\r\n  return (\r\n    <div>\r\n      {success && (\r\n        <OrderSuccessModal\r\n          onClose={() => props.history.push(\"/\")}\r\n          order={order}\r\n        />\r\n      )}\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3 className=\"remove-semantic-css\">Shipping</h3>\r\n            <div>\r\n              {cart.shipping.address}, {cart.shipping.city},\r\n              {cart.shipping.postalCode}, {cart.shipping.country},\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"remove-semantic-css\">Payment</h3>\r\n            <div>Payment Method: {cart.payment.paymentMethod}</div>\r\n          </div>\r\n          <div>\r\n            <ul className=\"cart-list-container\">\r\n              <li>\r\n                <h3 className=\"remove-semantic-css\">Shopping Cart</h3>\r\n                <div>Price</div>\r\n              </li>\r\n              {cartItems.length === 0 ? (\r\n                <div>Cart is empty</div>\r\n              ) : (\r\n                cartItems.map((item) => (\r\n                  <li key={item.productId}>\r\n                    <div className=\"cart-image\">\r\n                      <img src={item.image} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"cart-name\">\r\n                      <div>\r\n                        <Link to={\"/product/\" + item.product}>{item.name}</Link>\r\n                      </div>\r\n                      <div>Qty: {item.qty}</div>\r\n                    </div>\r\n                    <div className=\"cart-price\">Rs.{item.price}</div>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n            <li>\r\n              <button\r\n                className=\"button primary full-width\"\r\n                onClick={placeOrderHandler}\r\n              >\r\n                Place Order\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <h3 className=\"remove-semantic-css\">Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items(Incl. Tax)</div>\r\n              <div>Rs.{itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>Rs.{shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>Rs.{taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>Rs.{totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import Axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  MY_ORDER_LIST_REQUEST,\r\n  MY_ORDER_LIST_SUCCESS,\r\n  MY_ORDER_LIST_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    // userInfo to fetch token\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n\r\n    //api call with token\r\n    const { data } = await Axios.post(\"/api/order\", order, {\r\n      headers: {\r\n        Authorization: \" Bearer \" + userInfo.token,\r\n      },\r\n    });\r\n\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_CREATE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: MY_ORDER_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.get(\"/api/orders/\" + userInfo.username, {\r\n      headers: { Authorization: \"Bearer \" + userInfo.token },\r\n    });\r\n    dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: MY_ORDER_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// export const listOrders = () => async (dispatch, getState) => {\r\n\r\n//   try {\r\n//     dispatch({ type: ORDER_LIST_REQUEST });\r\n//     const { userSignin: { userInfo } } = getState();\r\n//     const { data } = await Axios.get(\"/api/orders\", {\r\n//       headers:\r\n//         { Authorization: 'Bearer ' + userInfo.token }\r\n//     });\r\n//     dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\r\n//   }\r\n// }\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.get(\"/api/order/\" + orderId, {\r\n      headers: { Authorization: \"Bearer \" + userInfo.token },\r\n    });\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// export const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult });\r\n//     const { userSignin: { userInfo } } = getState();\r\n//     const { data } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\r\n//       headers:\r\n//         { Authorization: 'Bearer ' + userInfo.token }\r\n//     });\r\n//     dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({ type: ORDER_PAY_FAIL, payload: error.message });\r\n//   }\r\n// }\r\n\r\n// export const deleteOrder = (orderId) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\r\n//     const { userSignin: { userInfo } } = getState();\r\n//     const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\r\n//       headers:\r\n//         { Authorization: 'Bearer ' + userInfo.token }\r\n//     });\r\n//     dispatch({ type: ORDER_DELETE_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({ type: ORDER_DELETE_FAIL, payload: error.message });\r\n//   }\r\n// }\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const MY_ORDER_LIST_REQUEST = 'MY_ORDER_LIST_REQUEST';\r\nexport const MY_ORDER_LIST_SUCCESS = 'MY_ORDER_LIST_SUCCESS';\r\nexport const MY_ORDER_LIST_FAIL = 'MY_ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\n\r\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST';\r\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS';\r\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL';","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listMyOrders } from \"../../actions/orderActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ProfileScreen = (props) => {\r\n  const myOrderList = useSelector((state) => state.myOrderList);\r\n  const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo } = useSelector((state) => state.userSignin);\r\n  useEffect(() => {\r\n    // if (userInfo) {\r\n    //   console.log(userInfo);\r\n    // }\r\n    dispatch(listMyOrders());\r\n    return () => {};\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"profile-orders content-margined\">\r\n      {loadingOrders ? (\r\n        <div>Loading...</div>\r\n      ) : errorOrders ? (\r\n        <div>{errorOrders} </div>\r\n      ) : (\r\n        <table className=\"profile-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.orderId}>\r\n                <td>{order.orderId}</td>\r\n                <td>{order.date}</td>\r\n                <td>{order.total}</td>\r\n                <td>{null}</td>\r\n                <td>\r\n                  <Link to={\"/order/\" + order.orderId}>DETAILS</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { detailsOrder } from \"../../actions/orderActions\";\r\n\r\nfunction OrderScreen(props) {\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(detailsOrder(props.match.params.id));\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <div>Loading ...</div>\r\n  ) : error ? (\r\n    <div>{error}</div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3 className=\"remove-semantic-css\">Shipping</h3>\r\n            <div>\r\n              {order.shipping.address}, {order.shipping.city},\r\n              {order.shipping.postalCode}, {order.shipping.country},\r\n            </div>\r\n            <div>\r\n              {order.isDelivered\r\n                ? \"Delivered at \" + order.deliveredAt\r\n                : \"Not Delivered.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"remove-semantic-css\">Payment</h3>\r\n            <div>Payment Method: {order.payment.paymentMethod}</div>\r\n            <div>{order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}</div>\r\n          </div>\r\n          <div>\r\n            <ul className=\"cart-list-container\">\r\n              <li>\r\n                <h3 className=\"remove-semantic-css\">Shopping Cart</h3>\r\n                <div>Price</div>\r\n              </li>\r\n              {order.orderItems.length === 0 ? (\r\n                <div>Cart is empty</div>\r\n              ) : (\r\n                order.orderItems.map((item) => (\r\n                  <li key={item.productId}>\r\n                    <div className=\"cart-image\">\r\n                      <img src={item.image} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"cart-name\">\r\n                      <div>\r\n                        <Link to={\"/product/\" + item.productId}>\r\n                          {item.name}\r\n                        </Link>\r\n                      </div>\r\n                      <div>Qty: {item.qty}</div>\r\n                    </div>\r\n                    <div className=\"cart-price\">Rs.{item.price}</div>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n            {/* <li className=\"placeorder-actions-payment\">\r\n              {loadingPay && <div>Finishing Payment...</div>}\r\n              {!order.isPaid && (\r\n                <PaypalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={handleSuccessPayment}\r\n                />\r\n              )}\r\n            </li> */}\r\n            <li>\r\n              <h3 className=\"remove-semantic-css\">Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items</div>\r\n              <div>Rs.{order.itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>Rs.{order.shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>Rs.{order.taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>Rs.{order.totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport HomeScreen from \"./components/screens/HomeScreen\";\n\nimport ProductScreen from \"./components/screens/ProductScreen\";\nimport CartScreen from \"./components/screens/CartScreen\";\nimport SigninScreen from \"./components/screens/SigninScreen\";\nimport { useSelector } from \"react-redux\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ShippingScreen from \"./components/screens/ShippingScreen\";\nimport PaymentScreen from \"./components/screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./components/screens/PlaceOrderScreen\";\nimport ProfileScreen from \"./components/screens/ProfileScreen\";\nimport OrderScreen from \"./components/screens/OrderScreen\";\n\nfunction App() {\n  // conditionally changing header button: \"Sign In\" based on currently logged userInfo.\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const openMenu = () => {\n    document.querySelector(\".sidebar\").classList.add(\"open\");\n  };\n  const closeMenu = () => {\n    document.querySelector(\".sidebar\").classList.remove(\"open\");\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"header\">\n          <div className=\"brand\">\n            <button onClick={openMenu}>&#9776;</button>\n            <Link to=\"/\">amazon</Link>\n          </div>\n          <div className=\"header-links\">\n            <Link to=\"/cart\">Cart</Link>\n            {userInfo ? (\n              <Link to=\"/profile\">\n                Hi,{\" \"}\n                {userInfo.name.charAt(0).toUpperCase() + userInfo.name.slice(1)}\n              </Link>\n            ) : (\n              <Link to=\"/signin\">Sign In</Link>\n            )}\n          </div>\n        </header>\n        <aside className=\"sidebar\">\n          <h4 className=\"remove-semantic-css\">Shopping Categories</h4>\n          <button onClick={closeMenu} className=\"sidebar-close-button\">\n            x\n          </button>\n          <ul>\n            <li>\n              <Link to=\"/\">Pants</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Shirts</Link>\n            </li>\n          </ul>\n        </aside>\n        <main className=\"main\">\n          <div className=\"content\">\n            <Route path=\"/register\" exact component={RegisterScreen} />\n            <Route path=\"/signin\" exact component={SigninScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/product/:id\" exact component={ProductScreen} />\n            {/* \"?\" means \"id\" is optional, /cart will work even without id PathVariable. */}\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/\" exact component={HomeScreen} />\n          </div>\n        </main>\n        <footer className=\"footer\">All right is reserved</footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const {\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n} = require(\"../constants/userConstants\");\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_SIGNIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_SIGNIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_SIGNIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { productListReducer, productDetailsReducer } from \"./productReducers\";\r\nimport { cartReducer } from \"./cartReducers\";\r\nimport { userSigninReducer, userRegisterReducer } from \"./userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  myOrderListReducer,\r\n  orderDetailsReducer,\r\n} from \"./orderReducers\";\r\n\r\nexport default combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n  orderCreate: orderCreateReducer,\r\n  myOrderList: myOrderListReducer,\r\n  orderDetails: orderDetailsReducer,\r\n});\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n// our state managed by this reducer is an obejct\r\n//with key properites products, loading, error\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST: // i m going to send request to get list of product. => show loading screen.\r\n      return { loading: true };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST: // i m going to send request to get list of product. => show loading screen.\r\n      return { loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING,\r\n  CART_SAVE_PAYMENT,\r\n  CART_CLEAR_ITEM,\r\n} from \"../constants/cartConstants\";\r\n\r\n// cartReducer state is an object with cartItem as one of many key.\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shipping: {}, payment: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      // if item already exists in the cart list.\r\n      const currentProductObj = state.cartItems.find(\r\n        (x) => x.productId === item.productId\r\n      );\r\n\r\n      // product is already in the list. so replace old product obj with new payload value. and return rest cartItems list as it is.\r\n      if (currentProductObj) {\r\n        //always return newly create state\r\n        return {\r\n          cartItems: state.cartItems.map((p) =>\r\n            p.productId === item.productId ? item : p\r\n          ),\r\n        };\r\n      }\r\n      // product is not already in cart List, so just append it to the current state.\r\n      return {\r\n        cartItems: [...state.cartItems, item],\r\n      };\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        cartItems: state.cartItems.filter(\r\n          (product) => product.productId !== action.payload\r\n        ),\r\n      };\r\n    case CART_SAVE_SHIPPING:\r\n      return { ...state, shipping: action.payload };\r\n    case CART_SAVE_PAYMENT:\r\n      return { ...state, payment: action.payload };\r\n    case CART_CLEAR_ITEM:\r\n      return {\r\n        cartItems: [],\r\n        shipping: {},\r\n        payment: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  MY_ORDER_LIST_REQUEST,\r\n  MY_ORDER_LIST_SUCCESS,\r\n  MY_ORDER_LIST_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, order: action.payload, success: true };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function orderDetailsReducer(\r\n  state = {\r\n    order: {\r\n      orderItems: [],\r\n      shipping: {},\r\n      payment: {},\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function myOrderListReducer(\r\n  state = {\r\n    orders: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case MY_ORDER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case MY_ORDER_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case MY_ORDER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function orderListReducer(state = {\r\n//   orders: []\r\n// }, action) {\r\n//   switch (action.type) {\r\n//     case ORDER_LIST_REQUEST:\r\n//       return { loading: true };\r\n//     case ORDER_LIST_SUCCESS:\r\n//       return { loading: false, orders: action.payload };\r\n//     case ORDER_LIST_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default: return state;\r\n//   }\r\n// }\r\n\r\n// function orderPayReducer(state = {\r\n//   order: {\r\n//     orderItems: [],\r\n//     shipping: {},\r\n//     payment: {}\r\n//   }\r\n// }, action) {\r\n//   switch (action.type) {\r\n//     case ORDER_PAY_REQUEST:\r\n//       return { loading: true };\r\n//     case ORDER_PAY_SUCCESS:\r\n//       return { loading: false, success: true };\r\n//     case ORDER_PAY_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default: return state;\r\n//   }\r\n// }\r\n\r\n// function orderDeleteReducer(state = {\r\n//   order: {\r\n//     orderItems: [],\r\n//     shipping: {},\r\n//     payment: {}\r\n//   }\r\n// }, action) {\r\n//   switch (action.type) {\r\n//     case ORDER_DELETE_REQUEST:\r\n//       return { loading: true };\r\n//     case ORDER_DELETE_SUCCESS:\r\n//       return { loading: false, success: true };\r\n//     case ORDER_DELETE_FAIL:\r\n//       return { loading: false, error: action.payload };\r\n//     default: return state;\r\n//   }\r\n// }\r\n// export {\r\n//   orderCreateReducer, orderDetailsReducer,\r\n//   orderPayReducer, myOrderListReducer, orderListReducer, orderDeleteReducer\r\n// }\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport Cookie from \"js-cookie\";\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\n// cart is reducer key for cartReduce and its initial value is set from cookie, if there is any product in the cart.\nconst initialState = {\n  cart: { cartItems, shipping: {}, payment: {} },\n  userSignin: { userInfo },\n};\nconst store = createStore(reducers, initialState, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}